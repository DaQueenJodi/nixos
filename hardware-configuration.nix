# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
  ];

  boot.initrd.availableKernelModules = [ "xhci_pci" "ehci_pci" "ahci" "usbhid" "usb_storage" "sd_mod" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-intel" ];
  boot.extraModulePackages = [ ];

  fileSystems."/" =
    { device = "none";
    fsType = "tmpfs";
    options = [ "defaults" "size=2G" "mode=755" ];
  };

  fileSystems."/hdd" = 
  { device = "/dev/disk/by-uuid/dc4bb3e0-4763-4065-82cf-f40a5d709889";
  fsType = "ext4";
};

fileSystems."/boot" =
  { device = "/dev/disk/by-uuid/D7EC-7BBF";
  fsType = "vfat";
};

fileSystems."/nix" =
  { device = "/dev/disk/by-uuid/0be845c1-d2ea-46dd-bc5e-90ff33d961a5";
  fsType = "ext4";
};

fileSystems."/etc/nixos" =
  { device = "/nix/persist/etc/nixos";
  fsType = "none";
  options = [ "bind" ];
};

fileSystems."/home" =
  { device = "/nix/persist/home";
  fsType = "none";
  options = [ "bind" ];
};
/*
fileSystems."/var/log" =
  { device = "/nix/persist/var/log";
  fsType = "none";
  options = [ "bind" ];
};
*/

swapDevices = [ ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.eno1.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp0s20u7.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
